/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Algorithm;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import javax.swing.table.TableModel;

/**
 *
 * @author Hanh Nguyen
 */
public class DetailResultCentroid1 extends javax.swing.JFrame {

    /**
     * Creates new form DetailResult
     * @param jsonString
     * @param value
     * @return 
     */
    private TableModel model;
    private int item;
    public static String toPrettyFormat(String jsonString) {
        JsonParser parser = new JsonParser();
        JsonObject json = parser.parse(jsonString).getAsJsonObject();

        Gson gson = new GsonBuilder().setPrettyPrinting().create();
        String prettyJson = gson.toJson(json);

        return prettyJson;
    }
    public DetailResultCentroid1(int item, TableModel model) {
        this.model = model;
        setLocation(100, 150);
        setResizable(false);
        initComponents();
        for(int i = 1; i <= item; i++) {
            cbCentroid1.addItem("Centroid " + String.valueOf(i));
        }
    }
//    public DetailResultCentroid1(int idCentroid, String value) {
//        setLocation(100, 150);
//        setResizable(false);
//        initComponents();
//        txtIdCentroid1.setText("Centroid " + String.valueOf(idCentroid));
//        
//        String jsonString = toPrettyFormat(value);
//        txtValueCentroid.setText(jsonString);
//        txtValueCentroid.setEditable(false);
//        txtIdCentroid1.setEditable(false);
//    }
    public DetailResultCentroid1() {
        initComponents();
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtValueCentroid = new javax.swing.JTextArea();
        cbCentroid1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Centroid");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtValueCentroid.setEditable(false);
        txtValueCentroid.setColumns(20);
        txtValueCentroid.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        txtValueCentroid.setRows(5);
        txtValueCentroid.setWrapStyleWord(true);
        txtValueCentroid.setSelectedTextColor(new java.awt.Color(51, 153, 255));
        jScrollPane1.setViewportView(txtValueCentroid);

        cbCentroid1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCentroid1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCentroid1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbCentroid1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.setVisible(false);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void cbCentroid1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCentroid1ActionPerformed
        
        String valueModel = (String) model.getValueAt(cbCentroid1.getSelectedIndex(), 1);
        String jsonString = toPrettyFormat(valueModel);
        txtValueCentroid.setText(jsonString);
        txtValueCentroid.setEditable(false);
    }//GEN-LAST:event_cbCentroid1ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbCentroid1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtValueCentroid;
    // End of variables declaration//GEN-END:variables
}
